# YottaDB-based Playground for glsdb
#  (includes fastify, fastify-plugin, qoper8-plugin and qoper8-wt + qoper8-cp

# M/Gateway Developments Ltd
# 23 September 2022

FROM debian:bullseye

ARG DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get upgrade -y

RUN apt-get install -y \
  curl \
  build-essential \
  make \
  gcc \
  git \
  wget \
  dos2unix \
  locate \
  nano \
  xinetd \
  libelf1 \
  libtinfo5 \
  lsof \
  libssl-dev \
  libicu-dev \
  locales \
  openssh-server \
  subversion \
  pkg-config \
  file \
  python3

# Create app directory
RUN mkdir -p /opt/glsdb \
 && mkdir /opt/yottadb \
 && mkdir /opt/glsdb/m

WORKDIR /opt/glsdb
COPY . /opt/glsdb

RUN chmod +x /opt/glsdb/ydb \
 && chmod +x /opt/glsdb/ydb_run \
 && chmod +x /opt/glsdb/ydb_run_temp

RUN locale-gen en_US.UTF-8

# ===  Install Node.js & NPM

ENV NODE_VERSION 16.17.0

RUN ARCH= && dpkgArch="$(dpkg --print-architecture)" \
  && case "${dpkgArch##*-}" in \
    amd64) ARCH='x64';; \
    ppc64el) ARCH='ppc64le';; \
    s390x) ARCH='s390x';; \
    arm64) ARCH='arm64';; \
    armhf) ARCH='armv7l';; \
    i386) ARCH='x86';; \
    *) echo "unsupported architecture"; exit 1 ;; \
  esac \
  # gpg keys listed at https://github.com/nodejs/node#release-keys
  && set -ex \
  && for key in \
    4ED778F539E3634C779C87C6D7062848A1AB005C \
    141F07595B7B3FFE74309A937405533BE57C7D57 \
    94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \
    74F12602B6F1C4E913FAA37AD3A89613643B6201 \
    71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \
    61FC681DFB92A079F1685E77973F295594EC4689 \
    8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 \
    C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \
    890C08DB8579162FEE0DF9DB8BEAB4DFCF555EF4 \
    C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C \
    DD8F2338BAE7501E3DD5AC78C273792F7D83545D \
    A48C2BEE680E841632CD4E44F07496B3EB3C1762 \
    108F52B48DB57BB0CC439B2997B01419BD92F80A \
    B9E2F5981AA6E0CD28160D9FF13993A75599653C \
  ; do \
      gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys "$key" || \
      gpg --batch --keyserver keyserver.ubuntu.com --recv-keys "$key" ; \
  done \
  && curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz" \
  && curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc" \
  && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \
  && grep " node-v$NODE_VERSION-linux-$ARCH.tar.xz\$" SHASUMS256.txt | sha256sum -c - \
  && tar -xJf "node-v$NODE_VERSION-linux-$ARCH.tar.xz" -C /usr/local --strip-components=1 --no-same-owner \
  && rm "node-v$NODE_VERSION-linux-$ARCH.tar.xz" SHASUMS256.txt.asc SHASUMS256.txt \
  && ln -s /usr/local/bin/node /usr/local/bin/nodejs \
  # smoke tests
  && node --version \
  && npm --version

RUN cd /opt/glsdb
RUN npm install fastify fastify-plugin qoper8-fastify glsdb

RUN echo "Installing YottaDB..."

RUN mkdir /tmp/tmp \
  && wget -P /tmp/tmp https://gitlab.com/YottaDB/DB/YDB/raw/master/sr_unix/ydbinstall.sh \
  && cd /tmp/tmp \
  && chmod +x ydbinstall.sh \
  && ./ydbinstall.sh --utf8 default --verbose --force-install \
  && export ydb_gbldir=/opt/yottadb/yottadb.gld \
  && /usr/local/lib/yottadb/r134/mumps -run ^GDE < /opt/fastify-qoper8/gde.txt \
  && /usr/local/lib/yottadb/r134/mupip create

# Install and configure the network mgsi interface code to allow
# network access to YottaDB (default setup uses
# API access to YottaDB)

RUN git clone https://github.com/chrisemunt/mgsi /opt/glsdb/mgsi \
  && cp /opt/glsdb/mgsi/yottadb/* /opt/glsdb/m \
  && /opt/glsdb/ydb_run_temp ylink^%zmgsi \
  && cp /opt/glsdb/mgsi/unix/zmgsi.ci /usr/local/lib/yottadb/r134 \
  && rm -r /opt/glsdb/mgsi

# Clean up

RUN updatedb

RUN cd /opt/glsdb

RUN chmod +x ydb \
 && chmod +x ydb_run \
 && chmod +x ydb_run_temp \
 && rm Dockerfile \
 && rm gde.txt

ENTRYPOINT ["/bin/bash"]

